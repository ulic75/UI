card_ulic_nowplaying:
  variables:
    fallback: "[[[ return entity.entity_id ]]]"
  show_name: false
  show_icon: false
  triggers_update:
    - "[[[ return entity.entity_id ]]]"
    - "[[[ return variables.fallback ]]]"
  styles:
    card:
      - padding: 0
    grid:
      - grid-template-areas: "'media_player'"
      - grid-template-columns: auto
      - grid-template-rows: auto
      - text-align: left
  extra_styles: >
    [[[
      if (states[entity.entity_id].state != "playing")
        return ":host { --vertical-stack-card-margin: 0; }"
    ]]]
  custom_fields:
    media_player:
      card:
        type: conditional
        conditions:
          - entity: >
              [[[
                if (states[entity.entity_id].state != "playing") return variables.fallback;
                return entity.entity_id;
              ]]]
            state: playing
        card:
          type: custom:mini-media-player
          entity: >
            [[[
              if (states[entity.entity_id].state != "playing") return variables.fallback;
              return entity.entity_id;
            ]]]
          artwork: material
          hide:
            controls: true
            volume: true
            power: true
            runtime: false
  state:
    - operator: template
      value: "[[[ states[entity.entity_id].state != 'playing' ]]]"
      styles:
        card:
          - display: none

card_ulic_nowplaying_with_controls:
  template: card_ulic_nowplaying
  custom_fields:
    media_player:
      card:
        card:
          hide:
            controls: false
            volume: false
            mute: true

nowplaying_no_volume:
  custom_fields:
    media_player:
      card:
        card:
          hide:
            volume: true

nowplaying_no_progress:
  custom_fields:
    media_player:
      card:
        card:
          hide:
            progress: true
